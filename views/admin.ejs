<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Admin Dashboard</title>
  <link
    href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"
    rel="stylesheet"
  />
  <style>
    /* Ensure the footer is pushed to the bottom */
    @font-face {
        font-family: "MyCustomFont";
        src: url("/MyCustomFont.ttf") format("truetype");
        font-weight: normal;
        font-style: normal;
    }

    body,
    html {
      font-family: "MyCustomFont", Arial, sans-serif;
      height: 100%;
      margin: 0;
      display: flex;
      flex-direction: column;
    }

    .content {
      flex: 1;
    }

    /* Popup container */
    .popup {
    position: fixed;
    top: 10px;
    left: 50%;
    transform: translateX(-50%);
    background-color: #4caf50;
    color: white;
    padding: 15px;
    border-radius: 5px;
    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
    z-index: 1000;
    opacity: 0;
    visibility: hidden;
    transition: opacity 0.5s ease-in-out, visibility 0.5s ease-in-out;
    }


    /* Popup content */
    .popup-content {
    display: flex;
    align-items: center;
    justify-content: space-between;
    }

    /* Progress bar container */
    .progress-bar {
    width: 100%;
    height: 5px;
    background-color: #76c7c0;
    border-radius: 3px;
    overflow: hidden;
    margin-top: 10px;
    }

    /* Progress bar animation */
    /* Progress bar animation */
    .progress {
    width: 0;
    height: 100%;
    background-color: white;
    transition: width 3s linear;
    }

    /* Custom styles for the log table */
    .log-table-container {
        max-height: 300px; /* Adjust this height as needed */
        overflow-y: auto;
        border: 1px solid #ddd; /* Optional: Add a border around the container */
        padding: 10px; /* Optional: Add some padding */
        background-color: #f9f9f9; /* Optional: Add a background color */
    }

    .log-table-container::-webkit-scrollbar {
        width: 8px;
    }

    .log-table-container::-webkit-scrollbar-thumb {
        background-color: #888;
        border-radius: 4px;
    }

    .log-table-container::-webkit-scrollbar-thumb:hover {
        background-color: #555;
    }

    /* Custom styles for tables with scrollbars */
    .scrollable-table-container {
        max-height: 300px; /* Adjust this height as needed */
        overflow-y: auto;
        border: 1px solid #ddd; /* Optional: Add a border around the container */
        padding: 10px; /* Optional: Add some padding */
        background-color: #f9f9f9; /* Optional: Add a background color */
    }

    .scrollable-table-container::-webkit-scrollbar {
        width: 8px;
    }

    .scrollable-table-container::-webkit-scrollbar-thumb {
        background-color: #888;
        border-radius: 4px;
    }

    .scrollable-table-container::-webkit-scrollbar-thumb:hover {
        background-color: #555;
    }

    .tab-pane {
        display: none; /* Hide all sections initially */
    }

    .tab-pane.active {
        display: block; /* Show the active section */
    }



  </style>
  <!-- D3.js -->
  <script src="https://d3js.org/d3.v7.min.js"></script>
</head>
<body>
  <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
    <div class="container-fluid">
      <a class="navbar-brand" href="/">Clothes Store</a>
      <button
        class="navbar-toggler"
        type="button"
        data-bs-toggle="collapse"
        data-bs-target="#navbarNav"
        aria-controls="navbarNav"
        aria-expanded="false"
        aria-label="Toggle navigation"
      >
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarNav">
        <ul class="navbar-nav ms-auto">
          <li class="nav-item">
            <a class="nav-link" href="/homePage">Home</a>
          </li>
          <li class="nav-item">
            <a class="nav-link active" href="/admin">Admin Dashboard</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/logout">Log out</a>
          </li>
        </ul>
      </div>
    </div>
  </nav>

  <!-- Main content wrapper to ensure footer stays at the bottom -->
  <div class="container mt-4 content">
    <h1>Admin Dashboard</h1>
    <ul class="nav nav-tabs" id="adminTabs" role="tablist">
        <li class="nav-item" role="presentation">
          <button class="nav-link active" id="users-tab" data-bs-toggle="tab" data-bs-target="#users" type="button" role="tab" aria-controls="users" aria-selected="true">Users</button>
        </li>
        <li class="nav-item" role="presentation">
          <button class="nav-link" id="products-tab" data-bs-toggle="tab" data-bs-target="#products" type="button" role="tab" aria-controls="products" aria-selected="false">Products</button>
        </li>
        <li class="nav-item" role="presentation">
          <button class="nav-link" id="coupons-tab" data-bs-toggle="tab" data-bs-target="#coupons" type="button" role="tab" aria-controls="coupons" aria-selected="false">Coupons</button>
        </li>
        <li class="nav-item" role="presentation">
          <button class="nav-link" id="purchases-tab" data-bs-toggle="tab" data-bs-target="#purchases" type="button" role="tab" aria-controls="purchases" aria-selected="false">Purchases</button>
        </li>
        <li class="nav-item" role="presentation">
          <button class="nav-link" id="logs-tab" data-bs-toggle="tab" data-bs-target="#logs" type="button" role="tab" aria-controls="logs" aria-selected="false">Logs</button>
        </li>
        <li class="nav-item" role="presentation">
          <button class="nav-link" id="graph-tab" data-bs-toggle="tab" data-bs-target="#graph" type="button" role="tab" aria-controls="graph" aria-selected="false">Graph</button>
        </li>
        <li class="nav-item" role="presentation">
          <button class="nav-link" id="twitter-tab" data-bs-toggle="tab" data-bs-target="#twitter" type="button" role="tab" aria-controls="twitter" aria-selected="false">Twitter Post</button>
        </li>
      </ul>
      
    
      <div class="tab-pane fade show active" id="users" role="tabpanel" aria-labelledby="users-tab">
    <!-- User Management Section -->
    <section id="user-management" class="mt-5">
        <h2>Manage Users</h2>
        <button class="btn btn-primary mb-3" data-bs-toggle="modal" data-bs-target="#addUserModal">Add New User</button>
        <div class="scrollable-table-container">
           <table class="table table-bordered">
        <thead>
          <tr>
            <th>Username</th>
            <th>Email</th>
            <th>Phone</th>
            <th>City</th>
            <th>Country</th>
            <th>Role</th>
            <th>Actions</th>
          </tr>
        </thead>
        <tbody>
          <% users.forEach(user => { %>
          <tr>
            <td
              contenteditable="true"
              onblur="updateField('<%= user._id %>', 'username', this.innerText)"
            >
              <%= user.username %>
            </td>
            <td
              contenteditable="true"
              onblur="updateField('<%= user._id %>', 'email', this.innerText)"
            >
              <%= user.email %>
            </td>
            <td
              contenteditable="true"
              onblur="updateField('<%= user._id %>', 'phone', this.innerText)"
            >
              <%= user.phone %>
            </td>
            <td
              contenteditable="true"
              onblur="updateField('<%= user._id %>', 'city', this.innerText)"
            >
              <%= user.city %>
            </td>
            <td
              contenteditable="true"
              onblur="updateField('<%= user._id %>', 'country', this.innerText)"
            >
              <%= user.country %>
            </td>
            <td>
              <select
                onchange="updateField('<%= user._id %>', 'role', this.value)"
                class="form-select form-select-sm"
              >
                <option value="customer" <%= user.role === 'customer' ? 'selected' : '' %>>Customer</option>
                <option value="admin" <%= user.role === 'admin' ? 'selected' : '' %>>Admin</option>
              </select>
            </td>
            <td>
              <form
                action="/admin/delete-user"
                method="POST"
                style="display: inline"
              >
                <input type="hidden" name="userId" value="<%= user._id %>" />
                <button type="submit" class="btn btn-danger btn-sm">
                  Delete
                </button>
              </form>
            </td>
          </tr>
          <% }) %>
        </tbody>
      </table>
    </div>
    </section>
  </div>

  <div class="tab-pane fade" id="products" role="tabpanel" aria-labelledby="products-tab">
    <!-- Product Management Section -->
    <section id="product-management" class="mt-5">
        <h2>Manage Products</h2>
        <button class="btn btn-primary mb-3" data-bs-toggle="modal" data-bs-target="#addProductModal">Add New Product</button>
        <div class="scrollable-table-container">
           <table class="table table-bordered">
        <thead>
          <tr>
            <th>Product ID</th>
            <th>Name</th>
            <th>Price</th>
            <th>Category</th>
            <th>Company</th>
            <th>Gender</th>
            <th>Amount</th>
            <th>Image</th>
            <th>Actions</th>
          </tr>
        </thead>
        <tbody>
            <% products.forEach(product => { %>
            <tr>
              <td><%= product.prodId %></td>
              <td
                contenteditable="true"
                onblur="updateField('<%= product._id %>', 'name', this.innerText)"
              >
                <%= product.name %>
              </td>
              <td
                contenteditable="true"
                onblur="updateField('<%= product._id %>', 'price', this.innerText)"
              >
                <%= product.price %>
              </td>
              <td
                contenteditable="true"
                onblur="updateField('<%= product._id %>', 'category', this.innerText)"
              >
                <%= product.category %>
              </td>
              <td
                contenteditable="true"
                onblur="updateField('<%= product._id %>', 'company', this.innerText)"
              >
                <%= product.company %>
              </td>
              <td
                contenteditable="true"
                onblur="updateField('<%= product._id %>', 'gender', this.innerText)"
              >
                <%= product.gender %>
              </td>
              <td
                contenteditable="true"
                onblur="updateField('<%= product._id %>', 'amount', this.innerText)"
              >
                <%= product.amount %>
              </td>
              <td>
                <img
                  src="data:image/<%= product.imageType %>;base64,<%= product.image.toString('base64') %>"
                  alt="<%= product.name %>"
                  class="img-thumbnail"
                  width="100"
                  style="cursor: pointer;"
                  onclick="document.getElementById('updateImageInput-<%= product._id %>').click()"
                />
                <form
                  action="/admin/update-product-image"
                  method="POST"
                  enctype="multipart/form-data"
                  style="display: none;"
                  id="imageUploadForm-<%= product._id %>"
                >
                  <input type="hidden" name="productId" value="<%= product._id %>" />
                  <input
                    type="file"
                    id="updateImageInput-<%= product._id %>"
                    name="image"
                    accept="image/*"
                    onchange="document.getElementById('imageUploadForm-<%= product._id %>').submit();"
                  />
                </form>
              </td>
              <td>
                <form action="/admin/delete-product" method="POST" style="display: inline">
                  <input type="hidden" name="productId" value="<%= product._id %>" />
                  <button type="submit" class="btn btn-danger btn-sm">Delete</button>
                </form>
              </td>
            </tr>
            <% }) %>
          </tbody>          
      </table>
      </div>
    </section>
</div>
  
    <!-- Add Product Modal -->
<div class="modal fade" id="addProductModal" tabindex="-1" aria-labelledby="addProductModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <form action="/admin/add-product" method="POST" enctype="multipart/form-data">
          <div class="modal-header">
            <h5 class="modal-title" id="addProductModalLabel">Add New Product</h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>
          <div class="modal-body">
            <div class="mb-3">
              <label for="productName" class="form-label">Name</label>
              <input type="text" class="form-control" id="productName" name="name" required />
            </div>
            <div class="mb-3">
              <label for="productPrice" class="form-label">Price</label>
              <input type="number" class="form-control" id="productPrice" name="price" required />
            </div>
            <div class="mb-3">
              <label for="productCategory" class="form-label">Category</label>
              <select class="form-select" id="productCategory" name="category" required>
                <option value="Tops">Tops</option>
                <option value="Bottoms">Bottoms</option>
                <option value="Outerwear">Outerwear</option>
                <option value="Dresses">Dresses</option>
                <option value="Footwear">Footwear</option>
                <option value="Accessories">Accessories</option>
              </select>
            </div>
            <div class="mb-3">
              <label for="productCompany" class="form-label">Company</label>
              <input type="text" class="form-control" id="productCompany" name="company" required />
            </div>
            <div class="mb-3">
              <label for="productGender" class="form-label">Gender</label>
              <select class="form-select" id="productGender" name="gender" required>
                <option value="male">Male</option>
                <option value="female">Female</option>
                <option value="unisex">Unisex</option>
              </select>
            </div>
            <div class="mb-3">
              <label for="productImage" class="form-label">Image</label>
              <input type="file" class="form-control" id="productImage" name="image" accept="image/*" required />
            </div>
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            <button type="submit" class="btn btn-primary">Add Product</button>
          </div>
        </form>
      </div>
    </div>
  </div>
  
  
    <!-- Edit Product Modal -->
<div class="modal fade" id="updateProductModal" tabindex="-1" aria-labelledby="updateProductModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <form action="/admin/update-product" method="POST" enctype="multipart/form-data">
          <div class="modal-header">
            <h5 class="modal-title" id="updateProductModalLabel">Update Product</h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>
          <div class="modal-body">
            <input type="hidden" id="updateProductId" name="productId" />
            <div class="mb-3">
              <label for="updateProductName" class="form-label">Product Name</label>
              <input type="text" class="form-control" id="updateProductName" name="name" required />
            </div>
            <div class="mb-3">
              <label for="updateProductPrice" class="form-label">Price</label>
              <input type="number" class="form-control" id="updateProductPrice" name="price" required />
            </div>
            <div class="mb-3">
              <label for="updateProductCategory" class="form-label">Category</label>
              <select class="form-select" id="updateProductCategory" name="category" required>
                <option value="Tops">Tops</option>
                <option value="Bottoms">Bottoms</option>
                <option value="Outerwear">Outerwear</option>
                <option value="Dresses">Dresses</option>
                <option value="Footwear">Footwear</option>
                <option value="Accessories">Accessories</option>
              </select>
            </div>
            <div class="mb-3">
              <label for="updateProductCompany" class="form-label">Company</label>
              <input type="text" class="form-control" id="updateProductCompany" name="company" required />
            </div>
            <div class="mb-3">
              <label for="updateProductGender" class="form-label">Gender</label>
              <select class="form-select" id="updateProductGender" name="gender" required>
                <option value="male">Male</option>
                <option value="female">Female</option>
                <option value="unisex">Unisex</option>
              </select>
            </div>
            <div class="mb-3">
              <label for="updateProductImage" class="form-label">Image</label>
              <input type="file" class="form-control" id="updateProductImage" name="image" accept="image/*" />
            </div>
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            <button type="submit" class="btn btn-primary">Save changes</button>
          </div>
        </form>
      </div>
    </div>
  </div>
  
  <div class="tab-pane fade" id="logs" role="tabpanel" aria-labelledby="logs-tab">
<!-- Log Management Section -->
<section id="log-management" class="mt-5">
    <h2>System Logs</h2>
    <div class="log-table-container" style="max-height: 300px; overflow-y: auto;">
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th>Date</th>
                    <th>Type</th>
                    <th>Username</th>
                    <th>Message</th>
                </tr>
            </thead>
            <tbody id="logTableBody">
                <!-- Logs will be injected here -->
            </tbody>
        </table>
    </div>
    <div class="d-flex justify-content-between mt-2">
        <button id="prevPageBtn" class="btn btn-secondary" disabled>Previous</button>
        <span id="pageInfo"></span>
        <button id="nextPageBtn" class="btn btn-secondary">Next</button>
    </div>
</section>
</div>


<div class="tab-pane fade" id="coupons" role="tabpanel" aria-labelledby="coupons-tab">
  <!-- Coupon Management Section -->
  <section id="coupon-management" class="mt-5">
    <h2>Manage Coupons</h2>
    <button class="btn btn-primary mb-3" data-bs-toggle="modal" data-bs-target="#addCouponModal">Add New Coupon</button>
    <div class="scrollable-table-container">
       <table class="table table-bordered">
        <thead>
            <tr>
                <th>Coupon Code</th>
                <th>Discount Percentage</th>
                <th>Expire Date</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            <% coupons.forEach(coupon => { %>
            <tr>
                <td
                    contenteditable="true"
                    onblur="updateField('<%= coupon._id %>', 'code', this.innerText)"
                >
                    <%= coupon.code %>
                </td>
                <td
                    contenteditable="true"
                    onblur="updateField('<%= coupon._id %>', 'discountPercentage', this.innerText)"
                >
                    <%= coupon.discountPercentage %>
                </td>
                <td>
                    <input
                        type="date"
                        class="form-control"
                        value="<%= new Date(coupon.expireDate).toISOString().split('T')[0] %>"
                        onchange="updateField('<%= coupon._id %>', 'expireDate', this.value)"
                    />
                </td>
                <td>
                    <form
                        action="/admin/delete-coupon"
                        method="POST"
                        style="display: inline"
                    >
                        <input type="hidden" name="id" value="<%= coupon._id %>" />
                        <button type="submit" class="btn btn-danger btn-sm">Delete</button>
                    </form>
                </td>
            </tr>
            <% }) %>
        </tbody>
    </table>
    </div>
</section>
</div>

  <!-- Add Coupon Modal -->
  <div class="modal fade" id="addCouponModal" tabindex="-1" aria-labelledby="addCouponModalLabel" aria-hidden="true">
      <div class="modal-dialog">
          <div class="modal-content">
              <form action="/admin/add-coupon" method="POST">
                  <div class="modal-header">
                      <h5 class="modal-title" id="addCouponModalLabel">Add New Coupon</h5>
                      <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                  </div>
                  <div class="modal-body">
                      <div class="mb-3">
                          <label for="couponCode" class="form-label">Coupon Code</label>
                          <input type="text" class="form-control" id="couponCode" name="code" required />
                      </div>
                      <div class="mb-3">
                          <label for="discountPercentage" class="form-label">Discount Percentage</label>
                          <input type="number" class="form-control" id="discountPercentage" name="discountPercentage" min="0" max="100" required />
                      </div>
                      <div class="mb-3">
                          <label for="expireDate" class="form-label">Expire Date</label>
                          <input type="date" class="form-control" id="expireDate" name="expireDate" required />
                      </div>
                  </div>
                  <div class="modal-footer">
                      <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                      <button type="submit" class="btn btn-primary">Add Coupon</button>
                  </div>
              </form>
          </div>
      </div>
  </div>

  <div class="tab-pane fade" id="purchases" role="tabpanel" aria-labelledby="purchases-tab">
  <section id="purchase-management" class="mt-5">
    <h2>Recent Purchases</h2>

    <!-- Search Bar for Username -->
    <form action="/admin/find-purchases" method="GET" class="mb-4 d-flex" onsubmit="saveUserName()">
        <div class="input-group me-2">
            <input type="text" class="form-control" id="userNameInput" name="userName" placeholder="Enter username to find purchases" value="<%= typeof userName !== 'undefined' ? userName : '' %>" required>
            <button class="btn btn-primary" type="submit">Search</button>
        </div>
        <!-- Reset Button -->
        <a href="/admin" onclick="resetUserName()" class="btn btn-secondary">Reset</a>
    </form>

    <!-- Sort Dropdown -->
    <div class="mb-3">
        <label for="sortPurchases" class="form-label">Sort by:</label>
        <select id="sortPurchases" class="form-select" onchange="sortPurchases()">
            <option value="date_desc">Date (Newest First)</option>
            <option value="date_asc">Date (Oldest First)</option>
            <option value="user_asc">User (A-Z)</option>
            <option value="user_desc">User (Z-A)</option>
        </select>
    </div>
    <div class="scrollable-table-container">
    <!-- Purchases Table -->
    <table class="table table-bordered">
        <thead>
            <tr>
                <th>Purchase ID</th>
                <th>User Name</th>
                <th>Total Amount</th>
                <th>Date</th>
                <th>Products</th>
            </tr>
        </thead>
        <tbody id="purchasesTableBody">
            <% purchases.forEach(purchase => { %>
            <tr>
                <td><%= purchase.purchaseId %></td>
                <td><%= purchase.userName %></td>
                <td>$<%= purchase.TotalAmount %></td>
                <td><%= new Date(purchase.Date).toLocaleString() %></td>
                <td>
                    <ul>
                        <% purchase.productsInfo.forEach(product => { %>
                        <li>
                            <strong>Name:</strong> <%= product.name %><br>
                            <strong>Price:</strong> $<%= product.price %><br>
                            <strong>Category:</strong> <%= product.category %><br>
                            <strong>Company:</strong> <%= product.company %><br>
                            <strong>Gender:</strong> <%= product.gender %><br>
                            <strong>quantityPurchased:</strong> <%= product.quantityPurchased %><br>
                            <img
                                src="data:image/<%= product.imageType %>;base64,<%= product.image.toString('base64') %>"
                                alt="<%= product.name %>"
                                class="img-thumbnail"
                                width="100"
                            />
                        </li>
                        <% }) %>
                    </ul>
                </td>
            </tr>
            <% }) %>
        </tbody>
    </table>
</div>
</section>
</div>

<div class="tab-pane fade" id="graph" role="tabpanel" aria-labelledby="graph-tab">
<div class="container mt-5">
    <h2>Purchase Trends</h2>
    <div class="row mb-3">
        <div class="col-md-4">
            <label for="dateRange" class="form-label">Select Date Range</label>
            <select id="dateRange" class="form-select" onchange="updateChart()">
                <option value="24h">Last 24 Hours</option>
                <option value="7d">Last Week</option>
                <option value="1m">Last Month</option>
                <option value="1y">Last Year</option>
                <option value="5y">Last 5 Years</option>
            </select>
        </div>
    </div>
    <div id="chart"></div>
</div>
</div>

<div class="tab-pane fade" id="twitter" role="tabpanel" aria-labelledby="twitter-tab">
<section id="tweet-management" class="mt-5">
    <h2>Post a Tweet</h2>
    <form action="/admin/post-tweet" method="POST" enctype="multipart/form-data">
      <div class="mb-3">
        <label for="tweetText" class="form-label">Tweet Text</label>
        <textarea class="form-control" id="tweetText" name="tweetText" rows="3" required></textarea>
      </div>
      <div class="mb-3">
        <label for="tweetImage" class="form-label">Upload Image (Optional)</label>
        <input class="form-control" type="file" id="tweetImage" name="image" accept="image/*">
      </div>
      <button type="submit" class="btn btn-primary">Post Tweet</button>
    </form>
  </section>
</div>

  </div>

  <!-- Tweet Success Popup -->
  <div id="tweetSuccessPopup" class="popup">
    <div class="popup-content">
      <p>Your tweet was posted successfully!</p>
      <div class="progress-bar">
        <div class="progress"></div>
      </div>
    </div>
  </div>

    <!-- Error Popup Container -->
    <div id="tweetErrorPopup" class="popup" style="background-color: #f44336;">
        <div class="popup-content">
            <p>Failed to post tweet. Please try again.</p>
            <div class="progress-bar">
                <div class="progress"></div>
            </div>
        </div>
    </div>


  <!-- Include the footer partial -->
  <%- include('_footer') %>

  <!-- Add User Modal -->
  <div
    class="modal fade"
    id="addUserModal"
    tabindex="-1"
    aria-labelledby="addUserModalLabel"
    aria-hidden="true"
  >
    <div class="modal-dialog">
      <div class="modal-content">
        <form action="/admin/add-user" method="POST">
          <div class="modal-header">
            <h5 class="modal-title" id="addUserModalLabel">Add New User</h5>
            <button
              type="button"
              class="btn-close"
              data-bs-dismiss="modal"
              aria-label="Close"
            ></button>
          </div>
          <div class="modal-body">
            <div class="mb-3">
              <label for="newUsername" class="form-label">Username</label>
              <input
                type="text"
                class="form-control"
                id="newUsername"
                name="username"
                required
              />
            </div>
            <div class="mb-3">
              <label for="newEmail" class="form-label">Email</label>
              <input
                type="email"
                class="form-control"
                id="newEmail"
                name="email"
              />
            </div>
            <div class="mb-3">
              <label for="newPhone" class="form-label">Phone</label>
              <input
                type="text"
                class="form-control"
                id="newPhone"
                name="phone"
              />
            </div>
            <div class="mb-3">
              <label for="newCity" class="form-label">City</label>
              <input
                type="text"
                class="form-control"
                id="newCity"
                name="city"
              />
            </div>
            <div class="mb-3">
              <label for="newCountry" class="form-label">Country</label>
              <input
                type="text"
                class="form-control"
                id="newCountry"
                name="country"
              />
            </div>
            <div class="mb-3">
              <label for="newRole" class="form-label">Role</label>
              <select class="form-select" id="newRole" name="role">
                <option value="customer">Customer</option>
                <option value="admin">Admin</option>
              </select>
            </div>
            <div class="mb-3">
              <label for="newPassword" class="form-label">Password</label>
              <input
                type="password"
                class="form-control"
                id="newPassword"
                name="password"
                required
              />
            </div>
          </div>
          <div class="modal-footer">
            <button
              type="button"
              class="btn btn-secondary"
              data-bs-dismiss="modal"
            >
              Close
            </button>
            <button type="submit" class="btn btn-primary">Add User</button>
          </div>
        </form>
      </div>
    </div>
  </div>



  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    const width = 800;
    const height = 400;
    const margin = { top: 20, right: 30, bottom: 30, left: 40 };

    let currentPage = 1;
    const limit = 20;

    document.addEventListener("DOMContentLoaded", function() {
        // Existing code that runs on DOMContentLoaded
        <% if (typeof tweetPosted !== 'undefined' && tweetPosted) { %>
            showTweetSuccessPopup();
        <% } else if (typeof tweetError !== 'undefined' && tweetError) { %>
            showTweetErrorPopup();
        <% } %>

        // Add the new code for fetching logs
        fetchLogs(currentPage);

        document.getElementById("prevPageBtn").addEventListener("click", function() {
            if (currentPage > 1) {
                currentPage--;
                fetchLogs(currentPage);
            }
        });

        document.getElementById("nextPageBtn").addEventListener("click", function() {
            currentPage++;
            fetchLogs(currentPage);
        });
    });


    function fetchLogs(page) {
        fetch(`/admin/logs?page=${page}&limit=${limit}`)
            .then(response => response.json())
            .then(data => {
                updateLogTable(data.logs);
                updatePagination(data.currentPage, data.totalPages);
            })
            .catch(error => {
                console.error("Error fetching logs:", error);
            });
    }

    function updateLogTable(logs) {
        const logTableBody = document.getElementById("logTableBody");
        logTableBody.innerHTML = "";

        logs.forEach(log => {
            const row = `
                <tr>
                    <td>${new Date(log.Date).toLocaleString()}</td>
                    <td>${log.type}</td>
                    <td>${log.username}</td>
                    <td>${log.message}</td>
                </tr>
            `;
            logTableBody.insertAdjacentHTML("beforeend", row);
        });
    }

    function updatePagination(currentPage, totalPages) {
        document.getElementById("pageInfo").textContent = `Page ${currentPage} of ${totalPages}`;
        
        document.getElementById("prevPageBtn").disabled = currentPage === 1;
        document.getElementById("nextPageBtn").disabled = currentPage === totalPages;
    }


    function showTweetSuccessPopup() {
        const popup = document.getElementById('tweetSuccessPopup');
        const progress = popup.querySelector('.progress');

        // Reset the progress bar width
        progress.style.width = '0';

        // Show the popup
        popup.style.opacity = '1';
        popup.style.visibility = 'visible';

        // Trigger reflow to ensure the transition occurs
        progress.offsetWidth; // This forces a reflow, making the transition visible

        // Start the progress bar animation
        progress.style.width = '100%';

        // Hide the popup after 3 seconds
        setTimeout(() => {
            popup.style.opacity = '0';
            popup.style.visibility = 'hidden';
            progress.style.width = '0';
        }, 3000);
    }


    function showTweetErrorPopup() {
        const popup = document.getElementById('tweetErrorPopup');
        const progress = popup.querySelector('.progress');

        // Reset the progress bar width
        progress.style.width = '0';

        // Show the popup
        popup.style.opacity = '1';
        popup.style.visibility = 'visible';

        // Trigger reflow to ensure the transition occurs
        progress.offsetWidth; // This forces a reflow, making the transition visible

        // Start the progress bar animation
        progress.style.width = '100%';

        // Hide the popup after 3 seconds
        setTimeout(() => {
            popup.style.opacity = '0';
            popup.style.visibility = 'hidden';
            progress.style.width = '0';
        }, 3000);
    }




    const svg = d3.select("#chart")
        .append("svg")
        .attr("width", width + margin.left + margin.right)
        .attr("height", height + margin.top + margin.bottom)
        .append("g")
        .attr("transform", `translate(${margin.left},${margin.top})`);

    function updateChart() {
        const range = document.getElementById("dateRange").value;

        // Fetch data from the server based on the selected date range
        fetch(`/admin/purchase-data?range=${range}`)
            .then(response => response.json())
            .then(data => {
                renderChart(data);
            })
            .catch(error => {
                console.error("Error fetching purchase data:", error);
            });
    }

    function renderChart(data) {
    svg.selectAll("*").remove();

    const x = d3.scaleTime()
        .domain(d3.extent(data, d => new Date(d.date)))
        .range([0, width]);

    svg.append("g")
        .attr("transform", `translate(0,${height})`)
        .call(d3.axisBottom(x));

    const y = d3.scaleLinear()
        .domain([0, d3.max(data, d => d.amount)])
        .range([height, 0]);

    svg.append("g")
        .call(d3.axisLeft(y));

    svg.append("path")
        .datum(data)
        .attr("fill", "none")
        .attr("stroke", "steelblue")
        .attr("stroke-width", 1.5)
        .attr("d", d3.line()
            .x(d => x(new Date(d.date)))
            .y(d => y(d.amount))
        );

    svg.selectAll("dot")
        .data(data)
        .enter()
        .append("circle")
        .attr("cx", d => x(new Date(d.date)))
        .attr("cy", d => y(d.amount))
        .attr("r", 5)
        .attr("fill", "red")
        .on("mouseover", function(event, d) {
            d3.select(this).attr("r", 8).attr("fill", "orange");
            svg.append("text")
                .attr("x", x(new Date(d.date)) + 10)
                .attr("y", y(d.amount) - 10)
                .attr("id", "tooltip")
                .text(`Amount: ${d.amount}`);
        })
        .on("mouseout", function() {
            d3.select(this).attr("r", 5).attr("fill", "red");
            svg.select("#tooltip").remove();
        });
}


    // Initial chart load
    updateChart();

    // Reset the input value and clear localStorage
    function resetUserName() {
        localStorage.removeItem('userName');
    }

    // Save the input value to localStorage
    function saveUserName() {
        const userName = document.getElementById('userNameInput').value;
        localStorage.setItem('userName', userName);
    }

    // Retrieve the input value from localStorage on page load
    window.onload = function() {
        const userName = localStorage.getItem('userName');
        if (userName) {
            document.getElementById('userNameInput').value = userName;
        }
    };

    function sortPurchases() {
        const sortBy = document.getElementById('sortPurchases').value;
        const tableBody = document.getElementById('purchasesTableBody');
        const rows = Array.from(tableBody.querySelectorAll('tr'));

        let sortedRows;
        switch (sortBy) {
            case 'date_asc':
                sortedRows = rows.sort((a, b) => new Date(a.cells[3].innerText) - new Date(b.cells[3].innerText));
                break;
            case 'date_desc':
                sortedRows = rows.sort((a, b) => new Date(b.cells[3].innerText) - new Date(a.cells[3].innerText));
                break;
            case 'user_asc':
                sortedRows = rows.sort((a, b) => a.cells[1].innerText.localeCompare(b.cells[1].innerText));
                break;
            case 'user_desc':
                sortedRows = rows.sort((a, b) => b.cells[1].innerText.localeCompare(a.cells[1].innerText));
                break;
        }

        // Clear the table body
        tableBody.innerHTML = '';

        // Re-append the sorted rows
        sortedRows.forEach(row => tableBody.appendChild(row));
    }


    function updateField(id, field, value) {
    // Validation for discountPercentage
    if (field === 'discountPercentage') {
        const percentage = parseInt(value, 10);
        if (isNaN(percentage) || percentage < 0 || percentage > 100) {
            alert('Discount percentage must be a number between 0 and 100.');
            return;
        }
        value = percentage; // Ensure the value is a valid number
    }

    // Validation for expireDate
    if (field === 'expireDate') {
        const newDate = new Date(value);
        if (isNaN(newDate.getTime())) {
            alert('Please enter a valid date.');
            return;
        }
        value = newDate.toISOString(); // Convert the date to a string format suitable for MongoDB
    }

    fetch(`/admin/update-field`, {
        method: "POST",
        headers: {
            "Content-Type": "application/json",
        },
        body: JSON.stringify({ id, field, value }),
    })
    .then((response) => {
        if (!response.ok) {
            alert("Error updating field");
        }
    })
    .catch((error) => {
        console.error("Error:", error);
        alert("An error occurred while updating the field");
    });
}


    function openUpdateUserModal(
      userId,
      username,
      email,
      phone,
      city,
      country,
      role
    ) {
      document.getElementById("updateUserId").value = userId;
      document.getElementById("updateUsername").value = username;
      document.getElementById("updateEmail").value = email;
      document.getElementById("updatePhone").value = phone;
      document.getElementById("updateCity").value = city;
      document.getElementById("updateCountry").value = country;
      document.getElementById("updateRole").value = role;
      var updateUserModal = new bootstrap.Modal(
        document.getElementById("updateUserModal")
      );
      updateUserModal.show();
    }

    function openUpdateProductModal(
      productId,
      name,
      price,
      category,
      company,
      gender,
      image
    ) {
      document.getElementById("updateProductId").value = productId;
      document.getElementById("updateProductName").value = name;
      document.getElementById("updateProductPrice").value = price;
      document.getElementById("updateProductCategory").value = category;
      document.getElementById("updateProductCompany").value = company;
      document.getElementById("updateProductGender").value = gender;
      document.getElementById("updateProductImage").value = image;
      var updateProductModal = new bootstrap.Modal(
        document.getElementById("updateProductModal")
      );
      updateProductModal.show();
    }
  </script>
</body>
</html>
